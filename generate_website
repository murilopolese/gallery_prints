#!/Users/murilopolese/.nvm/versions/node/v12.16.3/bin/node

const fs = require('fs')

function isFile(f) {
  return f.toLowerCase().indexOf('.jpg') !== -1
      || f.toLowerCase().indexOf('.png') !== -1
}

function getName(file) {
  return file.toLowerCase().replace('.jpg', '')
}

let rootUrl = '/'
let files = fs.readdirSync('./www/media')
files = files.filter(isFile)

console.log(files)

// UNORDERED LIST OF IMAGES
function List(files) {
  function Item(file) {
    let folderName = getName(file)
    return `
      <li>
        <a href="${rootUrl}p/${folderName}">
          <img src="${rootUrl}media/${file}" alt="${folderName}" />
          ${folderName}
        </a>
      </li>
    `
  }
  return `
    <ul>
      ${files.map(Item).join('')}
    </ul>
  `
}

// BASE HTML TEMPLATE
function PageLayout(content) {
  return `
    <!DOCTYPE html>
    <html lang="en" dir="ltr">
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        <title>PRINTS</title>
        <link rel="stylesheet" href="${rootUrl}theme.css">
      </head>
      <body>
        ${content}
      </body>
    </html>
  `
}

// INDEX WITH ALL IMAGES
function Index(files) {
  const content = `
    <h1>PRINTS</h1>
    ${List(files)}
  `
  return PageLayout(content)
}

// SINGLE IMAGE WITH NAVIGATION
function Single(file, files) {
  const i = files.indexOf(file)
  const nextFile = files[(i+1) % files.length]
  const prevFile = files[(files.length + (i-1)) % files.length]
  const content = `
    <div class="navigation">
      <a href="${rootUrl}p/${getName(prevFile)}"><</a>
      <div class="single-display">
        <a href="${rootUrl}media/${file}" target="_blank">
          <img src="${rootUrl}media/${file}" alt="${getName(file)}" />
        </a>
      </div>
      <a href="${rootUrl}p/${getName(nextFile)}">></a>
    </div>
    <h2>${file}</h2>
    <h1>PRINTS</h1>
    ${List(files)}
  `
  return PageLayout(content)
}

// CREATE INDEX
fs.writeFileSync('./www/index.html', Index(files))
// CREATE ONE PAGE FOR EACH FILE
files.forEach((file, i) => {
  const folderName = getName(file)
  fs.mkdirSync(`./www/p/${folderName}`, { recursive: true })
  fs.writeFileSync(`./www/p/${folderName}/index.html`, Single(file, files))
})
